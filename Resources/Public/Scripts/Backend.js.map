{"version":3,"sources":["Resources/Private/Assets/Helper/checkAgent.js","Resources/Private/Assets/Youtube/Preview.js","Resources/Private/Assets/Youtube/Backend.js"],"names":["hasAutoplay","callback","autoplay","HAS_AUTOPLAY","test","window","navigator","userAgent","check","fixPreview","img","src","getAttribute","naturalHeight","naturalWidth","indexOf","replace","setAttribute","setTimeout","onload","fixPreviews","images","document","querySelectorAll","i","length","backendFixPreview","event","NODE_TYPE","NODE","detail","node","get","nodeType","error","addEventListener","forEach"],"mappings":";;;;yBAaA,SAASA,EAAYC,IAbrB,eAAeC,6DAAiBD,yCACtBE,GAAgB,6CAA6CC,KAC/DC,OAAOC,UAAUC,eAEfJ,IAAiBD,GAAcC,GAAgBD,KAC1B,mBAAZD,GACPA,KAQRO,EAAM,EAAMP,GCZhB,SAASQ,EAAWC,OACZC,EAAMD,EAAIE,aAAa,OAEvBF,EAAIG,eAAiB,IACrBH,EAAII,cAAgB,MACY,GAAhCH,EAAII,QAAQ,kBAEZJ,EAAMA,EACDK,QAAQ,YAAa,WACrBA,QAAQ,YAAa,aACrBA,QAAQ,YAAa,aACrBA,QAAQ,gBAAiB,aAC9BN,EAAIO,aAAa,MAAON,GACxBO,YAAW,WACPR,EAAIS,OAAS,WACTV,EAAWC,MAEhB,IACHQ,YAAW,WACPT,EAAWC,KACZ,MAIX,SAASU,EAAYC,GACjBrB,GAAY,gBACc,IAAXqB,IACPA,EAASC,SAASC,iBACd,kDAGH,IAAIC,EAAIH,EAAOI,OAAS,EAAGD,GAAK,EAAGA,IACpCf,EAAWY,EAAOG,OChC9B,SAASE,EAAkBC,OACjBC,EAAY,8CAERC,EAAOF,EAAMG,OAAOC,MAEF,mBAAZF,EAAKG,KACTH,EAAKG,IAAI,cAAgBJ,GACJ,iBAAjBC,EAAKI,UAAwBJ,EAAKI,WAAaL,IAEvDR,IAEN,MAAOc,KD0Bb7B,OAAO8B,iBAAiB,QAAQ,WAC5Bf,OCxBJ,CAAC,cAAe,gBAAgBgB,SAAQ,SAAAT,GACpCL,SAASa,iBAAiB,QAAUR,EAAOD,GAAmB","file":"Backend.js","sourcesContent":["function check(autoplay = true, callback) {\n    const HAS_AUTOPLAY = !/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(\n        window.navigator.userAgent\n    );\n    if ((!HAS_AUTOPLAY && !autoplay) || (HAS_AUTOPLAY && autoplay)) {\n        if (typeof callback == 'function') {\n            callback();\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction hasAutoplay(callback) {\n    check(true, callback);\n}\n\nfunction noAutoplay(callback) {\n    check(false, callback);\n}\n\nexport { hasAutoplay, noAutoplay };\n","import { hasAutoplay } from '../Helper/checkAgent';\n\nfunction fixPreview(img) {\n    let src = img.getAttribute('src');\n    if (\n        img.naturalHeight <= 90 &&\n        img.naturalWidth <= 120 &&\n        src.indexOf('/default.jpg') == -1\n    ) {\n        src = src\n            .replace('mqdefault', 'default')\n            .replace('hqdefault', 'mqdefault')\n            .replace('sddefault', 'hqdefault')\n            .replace('maxresdefault', 'sddefault');\n        img.setAttribute('src', src);\n        setTimeout(() => {\n            img.onload = () => {\n                fixPreview(img);\n            };\n        }, 10);\n        setTimeout(() => {\n            fixPreview(img);\n        }, 5000);\n    }\n}\n\nfunction fixPreviews(images) {\n    hasAutoplay(() => {\n        if (typeof images === 'undefined') {\n            images = document.querySelectorAll(\n                'img.jonnitto-prettyembed__youtube-preview'\n            );\n        }\n        for (let i = images.length - 1; i >= 0; i--) {\n            fixPreview(images[i]);\n        }\n    });\n}\n\nwindow.addEventListener('load', () => {\n    fixPreviews();\n});\n\nexport default fixPreviews;\n","import fixPreviews from './Preview';\n\nfunction backendFixPreview(event) {\n    const NODE_TYPE = 'Jonnitto.PrettyEmbedYoutube:YouTube';\n    try {\n        const NODE = event.detail.node;\n        if (\n            (typeof NODE.get == 'function' &&\n                NODE.get('nodeType') === NODE_TYPE) ||\n            (typeof NODE.nodeType == 'string' && NODE.nodeType === NODE_TYPE)\n        ) {\n            fixPreviews();\n        }\n    } catch (error) {}\n}\n\n['NodeCreated', 'NodeSelected'].forEach(event => {\n    document.addEventListener('Neos.' + event, backendFixPreview, false);\n});\n\nexport default backendFixPreview;\n"]}